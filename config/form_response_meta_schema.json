{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "This meta-schema, it is used to generate the form response schema. refer to the readme for details",
  "type": "object",
  "required": [
    "medical_equipment",
    "accommodation",
    "offer_transport",
    "offer_space",
    "expert_advice_type",
    "offer_care",
    "business_details",
    "contact_details"
  ],
  "additionalProperties": false,
  "properties": {
    "medical_equipment": {
      "$ref": "#/definitions/yes_no"
    },
    "are_you_a_manufacturer": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.are_you_a_manufacturer.options" ]
      }
    },
    "product_details": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "medical_equipment_type",
          "product_id"
        ],
        "additionalProperties": false,
        "properties": {
          "medical_equipment_type": {
            "type": "string",
            "enum": [ "meta_i18n_enum:coronavirus_form.questions.medical_equipment_type.options" ]
          },
          "product_id": {
            "type": "string",
            "format": "uuid"
          },
          "product_name": {
            "type": "string"
          },
          "product_quantity": {
            "$ref": "#/definitions/whole_number"
          },
          "product_cost": {
            "type": "string",
            "pattern": "^[0-9]*\\.?[0-9]{0,2}$"
          },
          "certification_details": {
            "type": "string"
          },
          "product_location": {
            "type": "string",
            "enum": [ "meta_i18n_enum:coronavirus_form.questions.product_details.product_location.options" ]
          },
          "product_postcode": {
            "$ref": "#/definitions/postcode"
          },
          "product_url": {
            "type": ["string", "null"]
          },
          "lead_time": {
            "$ref": "#/definitions/whole_number"
          },
          "equipment_type": {
            "type": ["string"],
            "enum": [ "meta_i18n_enum:coronavirus_form.questions.product_details.equipment_type.options" ]
          }
        }
      }
    },
    "accommodation": {
      "type": "string",
      "enum": [ "meta_i18n_enum:coronavirus_form.questions.accommodation.options" ]
    },
    "rooms_number": {
      "type": "string"
    },
    "transport_type" :{
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.transport_type.options" ]
      }
    },
    "transport_description": {
      "type": "string"
    },
    "offer_transport": {
      "$ref": "#/definitions/yes_no"
    },
    "offer_space": {
      "$ref": "#/definitions/yes_no"
    },
    "offer_space_type": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.offer_space_type.options" ]
      }
    },
    "warehouse_space_description": {
      "type": ["string", "null"]
    },
    "office_space_description": {
      "type": ["string", "null"]
    },
    "offer_space_type_other": {
      "type": ["string", "null"]
    },
    "general_space_description": {
      "type": ["string", "null"]
    },
    "expert_advice_type": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.expert_advice_type.options" ]
      }

    },
    "expert_advice_type_other": {
      "type": ["string", "null"]
    },
    "offer_care": {
      "$ref": "#/definitions/yes_no"
    },
    "offer_care_type": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.offer_care_qualifications.offer_care_type.options" ]
      }
    },
    "offer_care_qualifications": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.offer_care_qualifications.care_qualifications.options" ]
      }
    },
    "offer_care_qualifications_type": {
      "type": ["string", "null"]
    },
    "offer_other_support": {
      "type": "string"
    },
    "location": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [ "meta_i18n_enum:coronavirus_form.questions.location.options" ]
      }
    },
    "business_details": {
      "type": "object",
      "required": [
        "company_name",
        "company_size",
        "company_location"
      ],
      "additionalProperties": false,
      "properties": {
        "company_name": {
          "type": "string"
        },
        "company_number": {
          "type": ["string", "null"]
        },
        "company_size": {
          "type": "string",
          "enum": [ "meta_i18n_enum:coronavirus_form.questions.business_details.company_size.options" ]
        },
        "company_location": {
          "type": "string",
          "enum": [ "meta_i18n_enum:coronavirus_form.questions.business_details.company_location.options" ]
        },
        "company_postcode": {
          "$ref": "#/definitions/postcode"
        }
      }
    },
    "contact_details": {
      "type": "object",
      "required": [
        "contact_name",
        "phone_number",
        "email"
      ],
      "additionalProperties": false,
      "properties": {
        "contact_name": {
          "type": "string"
        },
        "role": {
          "type": ["string", "null"]
        },
        "phone_number": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "pattern": "[@]{1}"
        }
      }
    },
    "reference_number": {
      "type": "string"
    },
    "check_answers_seen": {
      "type": "boolean"
    },
    "_csrf_token": {
      "type": "string"
    },
    "current_path": {
      "type": "string"
    },
    "previous_path": {
      "type": "string"
    },
    "additional_product": {
      "$ref": "#/definitions/yes_no"
    }
  },
  "definitions": {
    "yes_no": {
      "type": "string",
      "enum": ["Yes", "No"]
    },
    "postcode": {
      "type": ["string", "null"],
      "pattern": "^[A-Za-z0-9 ]{4,}$"
    },
    "whole_number": {
      "type": "string",
      "pattern": "^[0-9]+$"
    }
  }
}
